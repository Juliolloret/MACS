import unittest
import json
import os
from agents.hypothesis_generator_agent import HypothesisGeneratorAgent
from llm_fake import FakeLLM

class TestHypothesisGenerator(unittest.TestCase):

    def setUp(self):
        os.environ["OPENAI_API_KEY"] = "dummy_key"

    def tearDown(self):
        del os.environ["OPENAI_API_KEY"]

    def test_hypothesis_generator_parses_json(self):
        brief = "Some brief"
        num = 1
        app_config = {
            "system_variables": {"models": {}},
            "agent_prompts": {"hypothesis_generator_sm": "You are a highly insightful research strategist and innovator..."}
        }
        fake = FakeLLM(app_config)
        agent = HypothesisGeneratorAgent("test_agent", "HypothesisGeneratorAgent", {"num_hypotheses": num}, fake, app_config)
        result = agent.execute({"integrated_knowledge_brief": brief})
        self.assertEqual(result["key_opportunities"], "This is a fake opportunity generated for testing by FakeLLM.")
        self.assertEqual(len(result["hypotheses_list"]), 1)
        self.assertEqual(result["hypotheses_list"][0]["hypothesis"], "This is a fake test hypothesis generated by FakeLLM.")

if __name__ == '__main__':
    unittest.main()
